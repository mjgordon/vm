# ==============================================
#               SIERPINSKI CARPET
# ==============================================


# ==============================================
# Main Loop
@START

# Check the value of the current position, put it into memory
Y PUSH
X PUSH
CALL >S-CHECK
MEM POP

# Add 1 to X
X PUSH
ADDC3_1

# Skip to end of loop if X is not 1023
LIT PUSH 3 PUSH 15 PUSH 15 EQUAL3 LIT PUSH >NOT-EDGE COND 

# Set X to 0
LIT PUSH 0 PUSH 0 PUSH 0 X POP

# Add 1 to Y
Y PUSH
ADDC3_1

# Go to END if y == 1023
LIT PUSH 3 PUSH 15 PUSH 15 EQUAL3 NOT LIT PUSH >END COND

@NOT-EDGE
GOTO >START


# ==============================================
# With Y(3),X(3) on the stack returns O(1)
@S-CHECK

X PUSH CONST3_0 EQUAL3 RSTK POP
Y PUSH CONST3_0 EQUAL3 RSTK PUSH
OR NOT LIT PUSH >S-CHECK-1 COND

# If  % 3 == 1 for x and y, return 0
X PUSH LIT PUSH 3 DIV31 X POP
Y PUSH LIT PUSH 3 DIV31 Y POP
GOTO >S-CHECK

@S-CHECK-0
LIT PUSH 0
RET

@S-CHECK-1
LIT PUSH 15
RET


# ==============================================
@END
