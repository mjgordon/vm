# ==============================================
# RSTK (and addition flag)
# Calls all other tests sequentially with the CALL expansion; 
# each test ends with a RET expansion, then GOTO's the end of the file

CALL >PC_TEST
CALL >MEM_TEST
CALL >IO_TEST
CALL >ADD_TEST
CALL >SUB_TEST
CALL >PEEK_TEST
CALL >COND_TEST
CALL >NOR_TEST
CALL >RSH_TEST
CALL >LSH_TEST

GOTO >END


# ==============================================
# PC Mode
# Puts 1, moves PC beyond instructions that would change it to 2
# Output : 1

@PC_TEST
LIT PUSH 1
GOTO >PC_TEST_B
LIT PUSH 1 ADD POP
@PC_TEST_B
OUT
RET

# ==============================================
# MEM Mode + X Mode + Y Mode
# Puts two numbers at different places in memory, then retrieves them

@MEM_TEST
LIT PUSH 0 PUSH 4 PUSH 0 X POP
LIT PUSH 0 PUSH 0 PUSH 0 Y POP
LIT PUSH 1 MEM POP

LIT PUSH 0 PUSH 2 PUSH 0 X POP
LIT PUSH 0 PUSH 2 PUSH 0 Y POP
LIT PUSH 2 MEM POP

LIT PUSH 0 PUSH 4 PUSH 0 X POP
LIT PUSH 0 PUSH 0 PUSH 0 Y POP
MEM PUSH OUT

LIT PUSH 0 PUSH 2 PUSH 0 X POP
LIT PUSH 0 PUSH 2 PUSH 0 Y POP
MEM PUSH OUT
RET

# ==============================================
# IO Mode
# Receives an nb of input and outputs it

@IO_TEST
IO PUSH OUT
RET

# ==============================================
# ADD mode and addition flag
# Adds two non-overflowing and two overflowing NBs. Returns their results and their overflow flags
# Output : 5 0 0 1

@ADD_TEST
LIT PUSH 2  PUSH 3 ADD POP OUT ADD PUSH OUT
LIT PUSH 15 PUSH 1 ADD POP OUT ADD PUSH OUT
RET

# ==============================================
# SUB mode and subtraction flag
# Subracts several non-underflowing and underflowing pairs of NBs.
# Output : 2 0 0 0 15 1 15 1 1 1

@SUB_TEST
LIT PUSH 5 PUSH  3 SUB POP OUT SUB PUSH OUT
LIT PUSH 5 PUSH  5 SUB POP OUT SUB PUSH OUT
LIT PUSH 5 PUSH  6 SUB POP OUT SUB PUSH OUT
LIT PUSH 0 PUSH  1 SUB POP OUT SUB PUSH OUT
LIT PUSH 0 PUSH 15 SUB POP OUT SUB PUSH OUT

RET


# ==============================================
# PEEK Command
# Pushes a sequence, then peeks at the second item down
# Output : 1 2 1 0

@PEEK_TEST
LIT PUSH 0 PUSH 1 PUSH 2 PEEK OUT OUT OUT OUT
RET

# ==============================================
# COND Command
# Output : 1 1

@COND_TEST
LIT PUSH 1
LIT PUSH 0 LIT PUSH >COND_TEST_B COND
LIT PUSH 1 ADD POP
@COND_TEST_B
OUT
LIT PUSH 0
LIT PUSH 1 LIT PUSH >COND_TEST_C COND
LIT PUSH 1 ADD POP
@COND_TEST_C
OUT
RET


# ==============================================
# NOR command 
# Output 15 0 12 3

@NOR_TEST
LIT PUSH 0 PUSH 0 NOR OUT
LIT PUSH 15 PUSH 15 NOR OUT
LIT PUSH 2 PUSH 3 NOR OUT
LIT PUSH 4 PUSH 8 NOR OUT

RET


# ==============================================
# RSH Command
# Output 0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7
@RSH_TEST
LIT PUSH 0 RSH OUT
LIT PUSH 1 RSH OUT
LIT PUSH 2 RSH OUT
LIT PUSH 3 RSH OUT
LIT PUSH 4 RSH OUT
LIT PUSH 5 RSH OUT
LIT PUSH 6 RSH OUT
LIT PUSH 7 RSH OUT
LIT PUSH 8 RSH OUT
LIT PUSH 9 RSH OUT
LIT PUSH 10 RSH OUT
LIT PUSH 11 RSH OUT
LIT PUSH 12 RSH OUT
LIT PUSH 13 RSH OUT
LIT PUSH 14 RSH OUT
LIT PUSH 15 RSH OUT
RET


# ==============================================
# LSH Command
# Output 0 2 4 6 8 10 12 14 0 2 4 6 8 10 12 14
@LSH_TEST
LIT PUSH 0 LSH OUT
LIT PUSH 1 LSH OUT
LIT PUSH 2 LSH OUT
LIT PUSH 3 LSH OUT
LIT PUSH 4 LSH OUT
LIT PUSH 5 LSH OUT
LIT PUSH 6 LSH OUT
LIT PUSH 7 LSH OUT
LIT PUSH 8 LSH OUT
LIT PUSH 9 LSH OUT
LIT PUSH 10 LSH OUT
LIT PUSH 11 LSH OUT
LIT PUSH 12 LSH OUT
LIT PUSH 13 LSH OUT
LIT PUSH 14 LSH OUT
LIT PUSH 15 LSH OUT

RET

@END
